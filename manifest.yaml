id: btcpayserver
title: BTCPay Server
version: 1.7.3
release-notes: |
  * Fix LAN configuration for proper https redirects
  * Update upstream to [v1.7.3](https://github.com/btcpayserver/btcpayserver/releases/tag/v1.7.3)
license: mit
wrapper-repo: "https://github.com/Start9Labs/btcpayserver-wrapper"
upstream-repo: "https://github.com/btcpayserver/btcpayserver"
support-site: "https://docs.btcpayserver.org/Support/"
marketing-site: "https://btcpayserver.org/"
donation-url: "https://btcpayserver.org/donate/"
build: ["make"]
description:
  short: Bitcoin and cryptocurrency payment processor and POS system.
  long: |
    BTCPay Server is a free and open-source cryptocurrency payment processor which allows you to receive payments in Bitcoin (on-chain and via the Lightning Network) and altcoins directly, with no fees, transaction cost or a middleman. 
    
    BTCPay is a non-custodial invoicing system which eliminates the involvement of a third-party. Payments with BTCPay go directly to your wallet, which increases the privacy and security. Your private keys are never required to receive payments to your BTCPay Server. There is no address re-use since each invoice uses a new address for receiving payments to your wallet.
assets:
  license: LICENSE
  icon: icon.png
  instructions: instructions.md
main:
  type: docker
  image: main
  entrypoint: "/init"
  args: []
  mounts:
    lnd: /mnt/lnd
    c-lightning: "/mnt/c-lightning"
    main: /datadir
health-checks:
  explorer-synced:
    name: Explorer Synced
    success-message: The UTXO tracker is synced to the tip of the Bitcoin blockchain
    type: docker
    image: main
    entrypoint: health_check.sh
    args: ["nbx"]
    inject: true
    io-format: json
  web-ui:
    name: Web UI
    success-message: BTCPay Server is ready to visit in a web browser
    type: docker
    image: main
    entrypoint: health_check.sh
    args: ["web"]
    io-format: json
    inject: true
  api:
    name: Data Interface
    success-message: The API is operational
    type: docker
    image: main
    entrypoint: health_check.sh
    args: ["api"]
    io-format: json
    inject: true
config:
  get:
    type: script
  set:
    type: script
dependencies:
  btc-rpc-proxy:
    version: ">=0.3.2.1 <0.4.0"
    requirement:
      type: "opt-in"
      how: Can alternatively use the internal Bitcoin Core if it is unpruned (ie. is a full archival node).
    description: Used for creating a permissioned RPC user and to fetch validated blocks on demand.
    config:
      check:
        type: script
      auto-configure:
        type: script
  bitcoind:
    version: ">=0.21.1.2 <26.0.0"
    requirement:
      type: "opt-out"
      how: Internal node is recommended, but you can alternatively configure an external bitcoin node for P2P connections. RPC connections require using the internal full archival Bitcoin Core node, or Bitcoin Proxy and a pruned Bitcoin Core node.
    description: Used for the P2P connection interface if configured with Internal Proxy and both the P2P and RPC interfaces if configured with Internal.
    config:
      check:
        type: script
      auto-configure:
        type: script
  lnd:
    version: ">=0.13.3.1 <0.16.0"
    requirement:
      type: "opt-in"
      how: Optionally use LND for internal lightning network node implementation.
    description: Used to communicate with the Lightning Network.
    config: ~
  c-lightning:
    version: ">=0.10.0.1 <0.13.0"
    requirement:
      type: "opt-in"
      how: Optionally use Core Lightning for internal lightning network node implementation.
    description: Used to communicate with the Lightning Network.
    config: ~
volumes:
  main:
    type: data
  lnd:
    type: pointer
    package-id: lnd
    volume-id: main
    path: "/public"
    readonly: true
  c-lightning:
    type: pointer
    package-id: c-lightning
    volume-id: main
    path: "/shared"
    readonly: true
alerts:
  install: 
    <p>BTCPay is a self hosted payment processing system. No third party exists to backup data. You are responsible for backups of all your information!</p>

    <p>The password you create on initial registration is not saved in EmbassyOS. Please save this password in a password manager, such as Bitwarden.</p>

   <p><b>PLEASE READ</b> the <b>INSTRUCTIONS</b> after installation!</p>
  uninstall: 
    <p><b>READ CAREFULLY!</b></p>
    
    <p>Uninstalling BTCPay will result in permanent loss of data, including any stores, apps, or invoices created. The only way to ensure data is not lost to to backup the service and restore from this backup.</p>
  restore: 
    Restoring BTCPay will overwrite its current data.
    
    Any stores or invoices created since the last backup will be not be recognized.
interfaces:
  main:
    name: Web Interface
    description: User interface for interacting with BTCPay Server in a browser.
    tor-config:
      port-mapping:
        80: "23000"
    lan-config:
      443:
        ssl: true
        internal: 80
    ui: true
    protocols:
      - tcp
      - http
backup:
  create:
    type: docker
    image: compat
    system: true
    entrypoint: compat
    args:
      - duplicity
      - create
      - /mnt/backup
      - /datadir
    mounts:
      BACKUP: /mnt/backup
      main: /datadir
    io-format: yaml
  restore:
    type: docker
    image: compat
    system: true
    entrypoint: compat
    args:
      - duplicity
      - restore
      - /mnt/backup
      - /datadir
    mounts:
      BACKUP: /mnt/backup
      main: /datadir
    io-format: yaml
actions:
  enable-registrations:
    name: Enable Registrations
    description: Resets the policies settings if you cannot create a new user because registrations are disabled.
    warning: |
      <p>Skip this action if you <b>can</b> create a new user in the web UI using the register button.</p>
      <p> Only if you <b>cannot</b> create a new user because registrations are disabled in the <code>Server Settings > Policies</code> do you need to preform this action.</p>
      <p><b>Please note:</b> This action will <i>restart</i> the BTCPay service.</p>
    allowed-statuses:
      - running
    implementation:
      type: docker
      image: main
      entrypoint: btcpay-admin.sh 
      args: ["enable-registrations"]
      inject: true
      io-format: json
  reset-admin-password:
    name: Reset Admin Password
    description: Resets the admin user with a temporary password.
    warning: |
      <p>This action will fail if more than one admin user is present.</p>
      <p>If another admin user exists, please login to this admin account, add SMTP email settings, and utilize the default <code>Forgot Password</code> flow on the login screen instead.</p>
    allowed-statuses:
      - running
    implementation:
      type: docker
      image: main
      entrypoint: btcpay-admin.sh
      args: ["reset-admin-password"]
      inject: true
      io-format: json
migrations:
  from:
    "*":
      type: script
      args: ["from"]
  to:
    "*":
      type: script
      args: ["to"]
