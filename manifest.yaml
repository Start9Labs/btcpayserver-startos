id: btcpayserver
title: BTCPay Server
version: 1.1.2.4
release-notes: "Upgrade to EmbassyOS v0.3.0"
license: mit
wrapper-repo: "https://github.com/Start9Labs/btcpayserver-wrapper"
upstream-repo: "https://github.com/btcpayserver/btcpayserver"
support-site: "https://docs.btcpayserver.org/Support/"
marketing-site: "https://btcpayserver.org/"
donation-url: "https://btcpayserver.org/donate/"
build: ["make"]
min-os-version: "0.3.0"
description:
  short: BTCPay Server is a self-hosted, open-source cryptocurrency payment processor. It is secure, private, censorship-resistant and free.
  long: |
    BTCPay Server is a free and open-source cryptocurrency payment processor which allows you to receive payments in Bitcoin (on-chain and via the Lightning Network) and altcoins directly, with no fees, transaction cost or a middleman. BTCPay is a non-custodial invoicing system which eliminates the involvement of a third-party. Payments with BTCPay go directly to your wallet, which increases the privacy and security. Your private keys are never required to receive payments to your BTCPay Server. There is no address re-use since each invoice uses a new address for receiving payments to your wallet.
assets:
  license: LICENSE
  icon: icon.png
  instructions: instructions.md
  docker-images: image.tar
main:
  type: docker
  image: main
  entrypoint: "docker_entrypoint.sh"
  args: []
  mounts:
    btc-rpc-proxy: "/mnt/btc-rpc-proxy"
    lnd: /mnt/lnd
    c-lightning: "/mnt/c-lightning"
    main: /datadir
  io-format: yaml
health-checks:
  explorer: 
    type: docker
    image: main
    system: false
    entrypoint: sh
    args: ["-c", "curl http://localhost:24444 || exit 1"]
    mounts:
      main: /datadir
    io-format: yaml
    critical: true
  main: 
    type: docker
    image: main
    system: false
    entrypoint: sh
    args: ["-c", "curl http://localhost:23000 || exit 1"]
    mounts:
      main: /datadir
    io-format: yaml
    critical: true
config:
  get:
    type: docker
    image: compat
    system: true
    entrypoint: compat
    args: 
      - config
      - get
      - /datadir
      - "/mnt/assets/config_spec.yaml"
    mounts:
      compat: /mnt/assets
      main: /datadir
    io-format: yaml
  set:
    type: docker
    image: compat
    system: true
    entrypoint: compat
    args:
      - config
      - set
      - btcpayserver
      - /datadir
      - "/mnt/assets/config_rules.yaml"
    mounts:
      compat: /mnt/assets
      main: /datadir
    io-format: yaml
dependencies:
  btc-rpc-proxy:
    version: ">=0.3.2.1 <0.4.0"
    recommended: true
    critical: false
    optional: Can alternatively configure an external bitcoin node.
    description: Used to fetch validated blocks.
    config:
      check:
        type: docker
        image: compat
        system: true
        entrypoint: compat
        args:
          - dependency
          - check
          - "btc-rpc-proxy"
          - /datadir
          - "/mnt/assets/btc-rpc-proxy_config_rules.yaml"
        mounts: 
          main: /datadir
          compat: /mnt/assets
      auto-configure:
        type: docker
        image: compat
        system: true
        entrypoint: compat
        args: 
          - dependency
          - "auto-configure"
          - "btc-rpc-proxy"
          - "/mnt/assets/btc-rpc-proxy_config_rules.yaml"
        mounts:
          compat: /mnt/assets
  bitcoind:
    version: "^0.21.1.2"
    recommended: true
    critical: true
    optional: Internal node is recommended, but you can alternatively configure an external bitcoin node.
    description: Used for the P2P connection interface.
    config:
      check: 
        type: docker
        image: compat
        system: true
        entrypoint: compat
        args:
          - dependency
          - check
          - bitcoind
          - /datadir
          - "/mnt/assets/bitcoind_config_rules.yaml"
        mounts: 
          main: /datadir
          compat: /mnt/assets
      auto-configure:
        type: docker
        image: compat
        system: true
        entrypoint: compat
        args: 
          - dependency
          - "auto-configure"
          - bitcoind
          - "/mnt/assets/bitcoind_config_rules.yaml"
        mounts:
          compat: /mnt/assets
  lnd:
    version: ">=0.13.0.5 <0.14.0"
    recommended: true
    critical: false
    optional: Optionally use LND for internal lightning network node implementation.
    description: Used to communicate with the Lightning Network.
    config: ~
  c-lightning:
    version: ">=0.10.0.1 <0.11.0"
    recommended: true
    critical: false
    optional: Optionally use c-lightning for internal lightning network node implementation.
    description: Used to communicate with the Lightning Network.
    config: ~
volumes:
  main:
    type: data
  compat:
    type: assets
  bitcoind:
    type: pointer
    package-id: bitcoind
    volume-id: main
    path: "/root/.bitcoin"
    readonly: true
  btc-rpc-proxy:
    type: pointer
    package-id: btc-rpc-proxy
    volume-id: main
    path: "/root"
    readonly: false
  lnd:
    type: pointer
    package-id: bitcoind
    volume-id: main
    path: "/root/.lnd"
    readonly: true
  c-lightning:
    type: pointer
    package-id: c-lightning
    volume-id: main
    path: "/root/.lightning"
    readonly: true
alerts:
  install: |
    BTCPay is a self hosted payment processing system. No third party exists to backup data. You are responsible for backups of all your information!

    The password you create on initial registration is not saved in EmbassyOS. Please save this password in a password manager, such as Bitwarden.

    **PLEASE READ** the **INSTRUCTIONS** after installation!
  uninstall: |
    **READ CAREFULLY!**

    Uninstalling BTCPay will result in permanent loss of data, including any stores, apps, or invoices created. The only way to ensure data is not lost to to backup the service and restore from this backup.
  restore: "Restoring BTCPay will overwrite its current data. \n\nAny stores or invoices created since the last backup will be not be recognized.\n"
interfaces:
  network:
    name: Network Interface
    description: Specifies the interfaces to listen on for HTTP connections.
    tor-config:
      port-mapping:
        80: "80"
        23000: "23000"
    lan-config:
      23000:
        ssl: false
        mapping: 23000
      80:
        ssl: true
        mapping: 443
    ui: true
    protocols:
      - tcp
      - http
backup:
  create:
    type: docker
    image: compat
    system: true
    entrypoint: compat
    args:
      - duplicity
      - create
      - btcpayserver
      - /mnt/backup
      - /datadir
    mounts:
      BACKUP: /mnt/backup
      main: /datadir
  restore:
    type: docker
    image: compat
    system: true
    entrypoint: compat
    args:
      - duplicity
      - restore
      - btcpayserver
      - /datadir
      - /mnt/backup
    mounts:
      BACKUP: /mnt/backup
      main: /datadir
actions:
  reset-server-policy:
    name: Reset Server Policies
    description: Resets the policies settings if you cannot create a new user because registrations are disabled.
    warning: |
      If you can't create a new user because registrations are disabled in your Server Settings > Policies, you need to reset the policies settings. Please skip this step if you can create a new user in the web interface using the register button. Running this command will also disable any other server policies currently configured.
    allowed-statuses:
      - running
    implementation:
      type: docker
      image: compat
      system: true
      entrypoint: docker_entrypoint.sh
      args: ["reset-server-policy"]
      mounts:
        main: /datadir
  reset-admin-password:
    name: Reset Admin Password
    description: Resets the admin user with a temporary password.
    warning: |
      This action will fail if more than one admin user is present. If another admin user exists, please login to this admin account to add SMTP settings to utilize the default "Forgot Password" flow.
    allowed-statuses:
      - running
    implementation:
      type: docker
      image: compat
      system: true
      entrypoint: docker_entrypoint.sh
      args: ["reset-admin-password"]
      mounts:
        main: /datadir